# frontend-application.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: frontend

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nodejs-app
  namespace: frontend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nodejs-app
  template:
    metadata:
      labels:
        app: nodejs-app
    spec:
      containers:
        - name: nodejs-app
          image: rsemihkoca/itumik_frontend:v0.1.0
          ports:
            - containerPort: 3000

---
apiVersion: networking.gke.io/v1
kind: ManagedCertificate
metadata:
  name: managed-cert
  namespace: frontend
spec:
  domains:
    - itu-mik.com
---
apiVersion: v1
kind: Service
metadata:
  name: nodejs-app-service
  namespace: frontend
spec:
  selector:
    app: nodejs-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000
  type: NodePort

---
#Gke network load balancer add https support
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nodejs-app-ingress
  namespace: frontend
  annotations:
    kubernetes.io/ingress.global-static-ip-name: itu-mik-ip # External Static IP name in GCP Global or Regional
    networking.gke.io/managed-certificates: "managed-cert,www-managed-cert" # A level domain name and CNAME record must be created in the DNS zone.
    kubernetes.io/ingress.class: "gce"

spec:
  rules:
    - host: itu-mik.com
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: nodejs-app-service
                port:
                  number: 80
