# frontend-application.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: frontend

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nodejs-app
  namespace: frontend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nodejs-app
  template:
    metadata:
      labels:
        app: nodejs-app
    spec:
      containers:
        - name: nodejs-app
          image: rsemihkoca/itumik_frontend:0.2.2.3
          ports:
            - containerPort: 3000

---
apiVersion: v1
kind: Service
metadata:
  name: nodejs-app-service
  namespace: frontend
spec:
  selector:
    app: nodejs-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000
  type: ClusterIP # ?

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nodejs-app-ingress
  namespace: frontend

  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /$1 # ?
    certmanager.k8s.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: 'true'
spec:
  tls:
    - hosts:
        - itu-mik.com
        - www.itu-mik.com
      secretName: itu-mik-com-tls
  rules:
    - host: itu-mik.com
      http:
        paths:
          - path: /?(.*)
            pathType: Prefix
            backend:
              service:
                name: nodejs-app-service
                port:
                  number: 80

#          - path: /api/?(.*)
#            backend:
#              serviceName: server-cluster-ip-service
#              servicePort: 5000
    - host: www.itu-mik.com
      http:
        paths:
          - path: /?(.*)
            pathType: Prefix
            backend:
              service:
                name: nodejs-app-service
                port:
                  number: 80

#          - path: /api/?(.*)
#            backend:
#              serviceName: server-cluster-ip-service
#              servicePort: 5000

